<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
       http://www.springframework.org/schema/mvc  
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 自动扫描,完成bean创建和依赖注入 --> 
	 <!-- 启动Spring的组件自动扫描机制。Spring会自动扫描base-package指定的包中的类和子包里面类 -->
	<!-- 此处可参考我的文章http://blog.csdn.net/jadyer/article/details/6038604 --> 
  <context:component-scan base-package="caideli"/> 
  <!-- 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean -->
	<!-- 启动SpringMVC的注解功能，它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
	<mvc:annotation-driven />
	<!-- 使用CGLIB动态代理AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" /> 

 <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>  
	<!-- 视图解析器 -->
	 <!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/back/" />
		<property name="suffix" value=".jsp" />
	</bean> -->
	
	<!-- 告诉velocity模板位置 -->
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer"> 
	    <property name="resourceLoaderPath"> 
			<value>/WEB-INF/template/vm/</value> 
	    </property> 
	    <property name="configLocation" value="classpath:caideli/properties/velocity.properties"/>  
	</bean>  
	<!-- valocity配置解析器 -->
	<bean id="velocityViewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="suffix" value=".vm" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- spring的日期格式化 -->
		<property name="dateToolAttribute" value="dateTool" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
		<property name="order" value="1" />
	</bean>

	<!-- 定义视图解析器 ,可自由扩展，或者自己重写的视图解析，必须实现ViewResolver接口 -->
	<bean id="viewResolver" class="caideli.tool.MultiViewResover">
		<property name="resolvers">
			<map>
				<entry key="json">
					<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView" />
<!-- 					<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->
				</entry>
				<entry key="vm">
					<ref bean="velocityViewResolver" />
				</entry>
			</map>
		</property>
	</bean>
	
<!-- 加载静态资源 -->
<!-- <mvc:resources mapping="/backStageManage/**" location="/WEB-INF/template/backStageManage/*" /> --> 
<mvc:resources mapping="/**" location="/WEB-INF/template/vm/*" /> 
<!-- <mvc:resources mapping="/backStageManage/**" location="/backStageManage/" />  -->	

	 <!-- 异常解析器 -->  
  <!-- <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
    <property name="exceptionMappings">  
      <props>  
        <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">common/fileerror</prop>  
      </props>  
    </property>  
  </bean>  --> 
</beans>
